select A.name, count(A.name) as articles_written, sum(A.views) as total_views
	from (select distinct B.name, B.views
		from (select authors.name, C.title, C.views
			from (select D.author, title, count(*) as views
				from (select articles.author, articles.title, articles.slug, log.path, log.status
					from articles join log on log.path = ('/article/' || articles.slug) and log.status = '200 OK'
				) as D group by author, title
			) as C join authors on C.author = authors.id
		) as B
	) as A group by A.name;



FOR QUESTION 3:

select date_trunc('day', log.time) as date, count(*) as http_requests 
	from log group by date;

The above query returns the following table, which is exactly what I wanted so far:
          date          | http_requests 
------------------------+---------------
 2016-07-01 00:00:00+00 |         38705
 2016-07-02 00:00:00+00 |         55200
 2016-07-03 00:00:00+00 |         54866
 2016-07-04 00:00:00+00 |         54903
 2016-07-05 00:00:00+00 |         54585
 2016-07-06 00:00:00+00 |         54774
 2016-07-07 00:00:00+00 |         54740
 2016-07-08 00:00:00+00 |         55084
 2016-07-09 00:00:00+00 |         55236
 2016-07-10 00:00:00+00 |         54489
 2016-07-11 00:00:00+00 |         54497
 2016-07-12 00:00:00+00 |         54839
 2016-07-13 00:00:00+00 |         55180
 2016-07-14 00:00:00+00 |         55196
 2016-07-15 00:00:00+00 |         54962
 2016-07-16 00:00:00+00 |         54498
 2016-07-17 00:00:00+00 |         55907
 2016-07-18 00:00:00+00 |         55589
 2016-07-19 00:00:00+00 |         55341
 2016-07-20 00:00:00+00 |         54557
 2016-07-21 00:00:00+00 |         55241
 2016-07-22 00:00:00+00 |         55206
 2016-07-23 00:00:00+00 |         54894
 2016-07-24 00:00:00+00 |         55100
 2016-07-25 00:00:00+00 |         54613
 2016-07-26 00:00:00+00 |         54378
 2016-07-27 00:00:00+00 |         54489
 2016-07-28 00:00:00+00 |         54797
 2016-07-29 00:00:00+00 |         54951
 2016-07-30 00:00:00+00 |         55073
 2016-07-31 00:00:00+00 |         45845


In order: 
select date_trunc('day', log.time) as date, count(*) as http_requests from log group by date order by http_requests desc;


          date          | http_requests 
------------------------+---------------
 2016-07-17 00:00:00+00 |         55907
 2016-07-18 00:00:00+00 |         55589
 2016-07-19 00:00:00+00 |         55341
 2016-07-21 00:00:00+00 |         55241
 2016-07-09 00:00:00+00 |         55236
 2016-07-22 00:00:00+00 |         55206
 2016-07-02 00:00:00+00 |         55200
 2016-07-14 00:00:00+00 |         55196
 2016-07-13 00:00:00+00 |         55180
 2016-07-24 00:00:00+00 |         55100
 2016-07-08 00:00:00+00 |         55084
 2016-07-30 00:00:00+00 |         55073
 2016-07-15 00:00:00+00 |         54962
 2016-07-29 00:00:00+00 |         54951
 2016-07-04 00:00:00+00 |         54903
 2016-07-23 00:00:00+00 |         54894
 2016-07-03 00:00:00+00 |         54866
 2016-07-12 00:00:00+00 |         54839
 2016-07-28 00:00:00+00 |         54797
 2016-07-06 00:00:00+00 |         54774
 2016-07-07 00:00:00+00 |         54740
 2016-07-25 00:00:00+00 |         54613
 2016-07-05 00:00:00+00 |         54585
 2016-07-20 00:00:00+00 |         54557
 2016-07-16 00:00:00+00 |         54498
 2016-07-11 00:00:00+00 |         54497
 2016-07-27 00:00:00+00 |         54489
 2016-07-10 00:00:00+00 |         54489
 2016-07-26 00:00:00+00 |         54378
 2016-07-31 00:00:00+00 |         45845
 2016-07-01 00:00:00+00 |         38705


SOME VIEWS I USED FOR Q3:

create view http_req_count_by_date as 
select date_trunc('day', log.time) as date, count(*) as http_requests 
	from log group by date order by http_requests desc;

create view http_error_count as 
select date_trunc('day', log.time) as date, count(*) as http_requests 
	from log where log.status = '404 NOT FOUND' 
	group by date order by http_requests desc;

MAIN QUERY:

select total.date, 100*(sum(error.http_requests)/(total.http_requests)) as percentage 
	from (http_error_count) as error, (http_req_count_by_date) as total 
		where error.date = total.date group by total.date, total.http_requests 
		having 100*(sum(error.http_requests)/(total.http_requests)) > 1.0 limit 3;

MAIN QUERY WITH SUBQUERIES SUBBED IN:

select total.date, 100*(sum(error.http_requests)/(total.http_requests)) as percentage 
	from 
	(
	select date_trunc('day', log.time) as date, count(*) as http_requests 
		from log where log.status = '404 NOT FOUND' 
		group by date order by http_requests desc
	) as error, 
	(
	select date_trunc('day', log.time) as date, count(*) as http_requests 
		from log group by date order by http_requests desc
	) as total 
	where error.date = total.date group by total.date, total.http_requests 
	having 100*(sum(error.http_requests)/(total.http_requests)) > 1.0 limit 3;









